services:
  account-service:
    container_name: account-service
    build:
      context: .
      dockerfile: ./AccountService/Dockerfile
    ports:
      - "80:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "Keycloak__TokenUrl=http://localhost:8080/realms/account_service/protocol/openid-connect/token"
      - "Keycloak__AuthorizationUrl=http://localhost:8080/realms/account_service/protocol/openid-connect/auth"
      - "Authentication__Authority=http://keycloak:8080/realms/account_service"
      - "Authentication__Audience=account"
      - "Authentication__ValidIssuer=http://localhost:8080/realms/account_service"
      - "Swagger__ClientId=public-client"
      - "ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=account_db;Username=user;Password=password"
    networks:
      - app-network
    depends_on:
      - keycloak
      - postgres
  
  keycloak:
    container_name: keycloak
    # Используем официальный образ Keycloak
    image: quay.io/keycloak/keycloak:24.0
    command: start-dev --import-realm
    environment:
      # Логин и пароль для админ-панели Keycloak
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KEYCLOAK_IMPORT=/opt/keycloak/data/import/realm-export.json
    volumes:
      - ./keycloak-config:/opt/keycloak/data/import
    ports:
      - "8080:8080"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
  
  postgres:
    image: postgres
    container_name: postgres-db
    environment:
      - POSTGRES_DB=account_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    # Политика перезапуска
    restart: always


networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: